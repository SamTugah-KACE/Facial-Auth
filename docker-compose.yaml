## docker-compose.yml
# version: "3.8"

services:
  auth-app:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth_app_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - test_network

  pgadmin4:
    build: 
      context: .
      dockerfile: dockerfile.pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@admin.com"
      PGADMIN_DEFAULT_PASSWORD: "openforme"
    ports:
      - "5067:80"
    depends_on:
      - auth-app
    networks:
      - test_network
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin/data

  web:
    build: .
    # command: sh -c "uvicorn main:app --reload --host 0.0.0.0 --port=8000"
    #command: bash -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 80 --reload"
    #command: bash -c "cd /app && alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 80 --reload"
    # command: bash -c 'while !</dev/tcp/auth-app/5432; do sleep 3; done; uvicorn main:app --host 0.0.0.0 --port 80 --reload'
    command: bash -c "
      echo 'Waiting for PostgreSQL to start...' && 
      sleep 5 && 
      uvicorn main:app --host 0.0.0.0 --port 80 --reload"


    env_file:
      - ./config/app.env
    environment:
      DATABASE_URL: "postgresql://postgres:password@auth-app:5432/auth_app_db"
    restart: always
    depends_on:
      - auth-app
    volumes:
      - ./:/auth
    ports:
      - 8081:80
    networks:
      - test_network

networks:
  test_network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
